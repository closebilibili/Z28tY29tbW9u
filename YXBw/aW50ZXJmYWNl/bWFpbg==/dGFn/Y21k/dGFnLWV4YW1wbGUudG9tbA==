# This is a TOML document. Boom.

version = "2.0.0"
user = "nobody"
pid = "/tmp/tag.pid"
dir = "./"
perf = "127.0.0.1:6090"
checkFile = "/data/www/tag.html"
family = "tag"
address = "172.16.33.56"
env = "test"
tick = "5m"

[tag]
tnameMaxLen = 20
feedBackMaxLen = 30
arcTagAddlevel = 3
arcTagDellevel = 4
arcTagRptLevel = 1
arcTagLikelevel = 1
arcTagHatelevel = 1
subTagMaxNum = 200
SubArcMaxNum =200
arcTagMaxNum = 12
arcTagAddMaxNum = 50
arcTagDelMaxNum = 10
ArcTagDelSomeNum = 2
arcTagLikeMaxNum = 50
arcTagHateMaxNum = 50
arcTagRptMaxNum = 30
likeLimitToLock = 100
MaxArcsPageSize=20
MaxArcsLimit=1000
MaxSelTagNum = 200
White = [14771787]
Migration = false
Ratio = 1000
SubRatio = 1000
ResTag  = false
ResRatio = 1000
ResLog  = false
ResLogRatio = 1000


[supervision]
    [supervision.sixFour]
        button = false
    [supervision.RealName]
            button = false

[identify]
    whiteAccessKey = ""
    whiteMid = 0
	csrfOn = false
    [identify.app]
    key = "3c4e41f926e51656"
    secret = "26a2095b60c24154521d24ae62b885bb"
    [identify.memcache]
    name = "go-business/identify"
    proto = "tcp"
    addr = "172.16.0.148:11211"
    active = 5
    idle = 10
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"    
    [identify.host]
    auth = "http://passport.bilibili.co"
    secret = "http://open.bilibili.co"
    [identify.httpClient]
    dial = "30ms"
    timeout = "100ms"
    keepAlive = "60s"
    key = "3c4e41f926e51656"
    secret = "26a2095b60c24154521d24ae62b885bb"
    [identify.httpClient.breaker]
    window  = "10s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100
    [identify.httpClient.url]
    "http://passport.bilibili.co/intranet/auth/tokenInfo" = {timeout = "100ms"}
    "http://passport.bilibili.co/intranet/auth/cookieInfo" = {timeout = "100ms"}
    "http://open.bilibili.co/api/getsecret" = {timeout = "500ms"}

[host]
apiCo = "http://api.bilibili.co"
apiCom = "http://api.bilibili.com"
bigData = "http://data.bilibili.co"
bangumi = "http://bangumi.bilibili.com"
account = "http://account.bilibili.com"
archive = "http://archive.api.bilibili.co"
ai = "http://data.bilibili.co"

[xlog]
    dir = "/data/log/tag/"
    [xlog.syslog]
    project = "history"
    chanSize = 10240

[ecode]
   domain = "172.16.33.248:6401"
    all = "1h"
    diff = "10m"
    [ecode.clientconfig]
        dial      = "2000ms"
        timeout   = "2s"
        keepAlive = "10s"
        timer     = 128
        key = "test"
        secret = "e6c4c252dc7e3d8a90805eecd7c73396"
        [ecode.clientconfig.breaker]
            window  ="3s"
            sleep   ="100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100

[tracer]
proto = "tcp"
addr = "172.16.33.46:5140"
tag = "platform/tag"

[traceon]
business = 2
proto = "udp"
addr = "172.18.18.213:10240"
chanSize = 10240

[app]
key = "3c4e41f926e51656"
secret = "26a2095b60c24154521d24ae62b885bb"


[httpClient]
    dial = "1s"
    timeout = "1s"
    keepAlive = "60s"
    timer = 1000
    key = "f6433799dbd88751"
    secret = "36f8ddb1806207fe07013ab6a77a3935"
    [httpClient.breaker]
        window  ="10s"
        sleep   ="10ms"
        bucket  = 10
        ratio   = 0.1
        request = 100

[httpSimilar]
dial      = "100ms"
timeout   = "800ms"
keepAlive = "60s"
timer     = 128
key = "f6433799dbd88751"
secret = "36f8ddb1806207fe07013ab6a77a3935"
[httpSimilar.breaker]
window  ="10s"
sleep   ="10ms"
bucket  = 10
ratio   = 0.1
request = 100

[multiHttp]
    [multiHttp.outer]
    addrs = ["0.0.0.0:6091"]
    maxListen = 1000
    [multiHttp.inner]
    addrs = ["0.0.0.0:6092"]
    maxListen = 1000
    [multiHttp.local]
    addrs = ["0.0.0.0:6093"]
    maxListen = 1000

[rpcServer2]
[[rpcServer2.servers]]
    proto = "tcp"
    addr = ":6099"
    weight = 10
[rpcServer2.zookeeper]
    root = "/microservice/tag-service/"
    addrs = ["172.18.33.50:2199","172.18.33.51:2199","172.18.33.52:2199"]
    timeout = "1s"

[mysql]
    [mysql.tag]
    addr = "172.16.33.54:3306"
    dsn = "test:test@tcp(172.16.33.54:3306)/bilibili_tag?timeout=2s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
    active = 20
    idle = 10
    idleTimeout ="4h"
    queryTimeout = "200ms"
    execTimeout = "200ms"
    tranTimeout = "200ms"
    [mysql.tag.breaker]
    window = "3s"
    sleep = "100ms"
    bucket = 10
    ratio = 0.5
    request = 100


[redis]
    [redis.tag.redis]
        name = "tag"
        proto = "tcp"
        addr = "172.16.33.54:6382"
        idle = 10
        active = 10
        dialTimeout = "500ms"
        readTimeout = "1s"
        writeTimeout = "1s"
        idleTimeout = "80s"
    [redis.tag.expire]
            sub = "8h"
            arcTag = "8h"
            arcTagOp = "24h"
            atLike = "24h"
            atHate = "24h"
    [redis.rank.redis]
        name = "tag"
        proto = "tcp"
        addr = "172.16.33.54:6382"
        idle = 10
        active = 10
        dialTimeout = "500ms"
        readTimeout = "1s"
        writeTimeout = "1s"
        idleTimeout = "80s"
    [redis.rank.expire]
            tagNewArc = "72h"

[memcache]
name = "tag"
proto = "tcp"
addr = "172.16.33.54:11214"
idle = 10
active = 10
dialTimeout = "2s"
readTimeout = "2s"
writeTimeout = "2s"
idleTimeout = "7h"
expire = "24h"
siExpire = "168h"

 
[accountRPC]
    group = "groupapp"
   pullInterval = "10s"
   [accountRPC.client]
       token="123456"
        timeout = "1s"
        timer = 1000
        [accountRPC.client.breaker]
            window  ="3s"
            sleep   ="100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100
    [accountRPC.zookeeper]
        root = "/microservice/account-service/"
        addrs = ["172.18.33.172:2181"]
        timeout = "30s"


[archiveRPC]
    group = "test"
    pullInterval = "10s"
        [archiveRPC.client]
        token = "123456"
        timeout = "1s"
        timer = 1000
        [archiveRPC.client.breaker]
            window  ="3s"
            sleep   ="100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100
        [archiveRPC.zookeeper]
        root = "/microservice/archive-service/"
        addrs = ["172.18.33.172:2181"]
        timeout = "30s"
        [archiveRPC.breaker]
            window  ="3s"
            sleep   ="100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100

[TagRPC]
   pullInterval = "10s"
   [TagRPC.client]
        timeout = "1s"
        timer = 1000
        [TagRPC.client.breaker]
            window  ="3s"
            sleep   ="100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100
    [TagRPC.zookeeper]
        root = "/microservice/tag-service2/"
        addrs = ["172.18.33.50:2199","172.18.33.51:2199","172.18.33.52:2199"]
        timeout = "30s"

[tagDisRPC]
    [tagDisRPC.client]
        timeout = "1s"
        [tagDisRPC.client.breaker]
            window  ="3s"
            sleep   ="100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100
    [tagDisRPC.conf]
        domain = "uat-api.bilibili.co"
        key = "3c4e41f926e51656"
        secret = "26a2095b60c24154521d24ae62b885bb"