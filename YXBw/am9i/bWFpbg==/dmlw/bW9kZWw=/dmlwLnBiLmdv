// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: vip.proto

/*
	Package model is a generated protocol buffer package.

	It is generated from these files:
		vip.proto

	It has these top-level messages:
		VipInfo
*/
package model

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

import go_common_time "go-common/library/time"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VipInfo struct {
	Mid                  int64               `protobuf:"varint,1,opt,name=Mid,proto3" json:"mid"`
	VipType              int32               `protobuf:"varint,2,opt,name=VipType,proto3" json:"vip_type"`
	VipStatus            int32               `protobuf:"varint,3,opt,name=VipStatus,proto3" json:"vip_status"`
	VipStartTime         go_common_time.Time `protobuf:"varint,4,opt,name=VipStartTime,proto3,casttype=go-common/library/time.Time" json:"vip_start_time"`
	VipOverdueTime       go_common_time.Time `protobuf:"varint,5,opt,name=VipOverdueTime,proto3,casttype=go-common/library/time.Time" json:"vip_overdue_time"`
	AnnualVipOverdueTime go_common_time.Time `protobuf:"varint,6,opt,name=AnnualVipOverdueTime,proto3,casttype=go-common/library/time.Time" json:"annual_vip_overdue_time"`
	AccessStatus         int32               `protobuf:"varint,7,opt,name=AccessStatus,proto3" json:"access_status"`
	FrozenDate           go_common_time.Time `protobuf:"varint,8,opt,name=FrozenDate,proto3,casttype=go-common/library/time.Time" json:"frozen_date"`
	VipStatusWarn        string              `protobuf:"bytes,9,opt,name=VipStatusWarn,proto3" json:"vip_status_warn"`
	VipRecentTime        go_common_time.Time `protobuf:"varint,10,opt,name=VipRecentTime,proto3,casttype=go-common/library/time.Time" json:"vip_recent_time"`
}

func (m *VipInfo) Reset()                    { *m = VipInfo{} }
func (m *VipInfo) String() string            { return proto.CompactTextString(m) }
func (*VipInfo) ProtoMessage()               {}
func (*VipInfo) Descriptor() ([]byte, []int) { return fileDescriptorVip, []int{0} }

func init() {
	proto.RegisterType((*VipInfo)(nil), "model.VipInfo")
}
func (m *VipInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VipInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Mid != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.Mid))
	}
	if m.VipType != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.VipType))
	}
	if m.VipStatus != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.VipStatus))
	}
	if m.VipStartTime != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.VipStartTime))
	}
	if m.VipOverdueTime != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.VipOverdueTime))
	}
	if m.AnnualVipOverdueTime != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.AnnualVipOverdueTime))
	}
	if m.AccessStatus != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.AccessStatus))
	}
	if m.FrozenDate != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.FrozenDate))
	}
	if len(m.VipStatusWarn) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintVip(dAtA, i, uint64(len(m.VipStatusWarn)))
		i += copy(dAtA[i:], m.VipStatusWarn)
	}
	if m.VipRecentTime != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintVip(dAtA, i, uint64(m.VipRecentTime))
	}
	return i, nil
}

func encodeVarintVip(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *VipInfo) Size() (n int) {
	var l int
	_ = l
	if m.Mid != 0 {
		n += 1 + sovVip(uint64(m.Mid))
	}
	if m.VipType != 0 {
		n += 1 + sovVip(uint64(m.VipType))
	}
	if m.VipStatus != 0 {
		n += 1 + sovVip(uint64(m.VipStatus))
	}
	if m.VipStartTime != 0 {
		n += 1 + sovVip(uint64(m.VipStartTime))
	}
	if m.VipOverdueTime != 0 {
		n += 1 + sovVip(uint64(m.VipOverdueTime))
	}
	if m.AnnualVipOverdueTime != 0 {
		n += 1 + sovVip(uint64(m.AnnualVipOverdueTime))
	}
	if m.AccessStatus != 0 {
		n += 1 + sovVip(uint64(m.AccessStatus))
	}
	if m.FrozenDate != 0 {
		n += 1 + sovVip(uint64(m.FrozenDate))
	}
	l = len(m.VipStatusWarn)
	if l > 0 {
		n += 1 + l + sovVip(uint64(l))
	}
	if m.VipRecentTime != 0 {
		n += 1 + sovVip(uint64(m.VipRecentTime))
	}
	return n
}

func sovVip(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozVip(x uint64) (n int) {
	return sovVip(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *VipInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowVip
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VipInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VipInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mid", wireType)
			}
			m.Mid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Mid |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipType", wireType)
			}
			m.VipType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VipType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipStatus", wireType)
			}
			m.VipStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VipStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipStartTime", wireType)
			}
			m.VipStartTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VipStartTime |= (go_common_time.Time(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipOverdueTime", wireType)
			}
			m.VipOverdueTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VipOverdueTime |= (go_common_time.Time(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnnualVipOverdueTime", wireType)
			}
			m.AnnualVipOverdueTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AnnualVipOverdueTime |= (go_common_time.Time(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessStatus", wireType)
			}
			m.AccessStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccessStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrozenDate", wireType)
			}
			m.FrozenDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FrozenDate |= (go_common_time.Time(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipStatusWarn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthVip
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VipStatusWarn = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VipRecentTime", wireType)
			}
			m.VipRecentTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowVip
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VipRecentTime |= (go_common_time.Time(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipVip(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthVip
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipVip(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowVip
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVip
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowVip
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthVip
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowVip
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipVip(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthVip = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowVip   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("vip.proto", fileDescriptorVip) }

var fileDescriptorVip = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x63, 0x42, 0x9a, 0x66, 0x49, 0x03, 0x6c, 0x91, 0x30, 0x1c, 0xbc, 0x11, 0x87, 0x2a,
	0xfc, 0x69, 0x22, 0x81, 0x38, 0x70, 0xac, 0x85, 0x2a, 0x71, 0xa8, 0x40, 0x6e, 0x15, 0x8e, 0xd6,
	0xc6, 0x5e, 0x9b, 0x95, 0xea, 0xdd, 0xd5, 0x7a, 0x1d, 0x54, 0x1e, 0x83, 0x13, 0x8f, 0xd4, 0x63,
	0x9f, 0x60, 0x45, 0xc3, 0x6d, 0x1f, 0x81, 0x13, 0xf2, 0xb8, 0xa1, 0xb8, 0x82, 0x88, 0x9b, 0x67,
	0xbe, 0xef, 0xfb, 0xed, 0x68, 0xc6, 0x68, 0xb0, 0xe4, 0x6a, 0xaa, 0xb4, 0x34, 0x12, 0xf7, 0x0a,
	0x99, 0xb2, 0xd3, 0xc7, 0xfb, 0x39, 0x37, 0x9f, 0xaa, 0xc5, 0x34, 0x91, 0xc5, 0x2c, 0x97, 0xb9,
	0x9c, 0x81, 0xba, 0xa8, 0x32, 0xa8, 0xa0, 0x80, 0xaf, 0x26, 0xf5, 0xe4, 0x6b, 0x0f, 0xf5, 0xe7,
	0x5c, 0xbd, 0x13, 0x99, 0xc4, 0x8f, 0x50, 0xf7, 0x88, 0xa7, 0xbe, 0x37, 0xf6, 0x26, 0xdd, 0xb0,
	0xef, 0x2c, 0xe9, 0x16, 0x3c, 0x8d, 0xea, 0x1e, 0xde, 0x03, 0xd7, 0xc9, 0x99, 0x62, 0xfe, 0xad,
	0xb1, 0x37, 0xe9, 0x85, 0x43, 0x67, 0xc9, 0xf6, 0x92, 0xab, 0xd8, 0x9c, 0x29, 0x16, 0xad, 0x45,
	0xfc, 0x02, 0x0d, 0xe6, 0x5c, 0x1d, 0x1b, 0x6a, 0xaa, 0xd2, 0xef, 0x82, 0x73, 0xe4, 0x2c, 0x41,
	0xb5, 0xb3, 0x84, 0x6e, 0x74, 0x6d, 0xc0, 0x47, 0x68, 0xd8, 0x14, 0xda, 0x9c, 0xf0, 0x82, 0xf9,
	0xb7, 0xe1, 0xe5, 0xa7, 0xce, 0x92, 0xd1, 0x55, 0x40, 0x9b, 0xd8, 0xf0, 0x82, 0xfd, 0xb4, 0x64,
	0x37, 0x97, 0xfb, 0x89, 0x2c, 0x0a, 0x29, 0x66, 0x75, 0x67, 0x5a, 0x07, 0xa2, 0x56, 0x1c, 0x1f,
	0xa3, 0xd1, 0x9c, 0xab, 0xf7, 0x4b, 0xa6, 0xd3, 0x8a, 0x01, 0xb0, 0x07, 0xc0, 0xe7, 0xce, 0x92,
	0x7b, 0x35, 0x50, 0x36, 0xd2, 0x46, 0xe4, 0x0d, 0x04, 0xce, 0xd0, 0x83, 0x03, 0x21, 0x2a, 0x7a,
	0x7a, 0x03, 0xbd, 0x05, 0xe8, 0x97, 0xce, 0x92, 0x87, 0x14, 0xf4, 0xf8, 0x7f, 0x5f, 0xf8, 0x2b,
	0x0f, 0xbf, 0x46, 0xc3, 0x83, 0x24, 0x61, 0x65, 0x79, 0xb5, 0xbc, 0x3e, 0x2c, 0xef, 0xbe, 0xb3,
	0x64, 0x87, 0x42, 0x7f, 0xbd, 0xbf, 0x96, 0x0d, 0x1f, 0x22, 0x74, 0xa8, 0xe5, 0x17, 0x26, 0xde,
	0x52, 0xc3, 0xfc, 0x6d, 0x18, 0x6a, 0xcf, 0x59, 0x72, 0x27, 0x83, 0x6e, 0x9c, 0x52, 0xf3, 0xcf,
	0x41, 0xfe, 0x48, 0xe2, 0x37, 0x68, 0xe7, 0xf7, 0x5d, 0x3e, 0x52, 0x2d, 0xfc, 0xc1, 0xd8, 0x9b,
	0x0c, 0xc2, 0x5d, 0x67, 0xc9, 0xdd, 0xeb, 0xe3, 0xc5, 0x9f, 0xa9, 0x16, 0x51, 0xdb, 0x89, 0x3f,
	0x40, 0x34, 0x62, 0x09, 0x13, 0xcd, 0x19, 0x11, 0x4c, 0xf1, 0x6c, 0x1d, 0xd5, 0xa0, 0x6c, 0x5c,
	0x49, 0x1b, 0x10, 0xfa, 0xe7, 0x97, 0x41, 0xe7, 0xe2, 0x32, 0xe8, 0x9c, 0xaf, 0x02, 0xef, 0x62,
	0x15, 0x78, 0xdf, 0x57, 0x81, 0xf7, 0xed, 0x47, 0xd0, 0x59, 0x6c, 0xc1, 0x5f, 0xfb, 0xea, 0x57,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x38, 0x57, 0xb5, 0xf8, 0x02, 0x00, 0x00,
}
