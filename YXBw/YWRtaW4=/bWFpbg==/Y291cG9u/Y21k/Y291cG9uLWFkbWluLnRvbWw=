# This is a TOML document. Boom

version = "1.0.0"
user = "nobody"
pid = "/tmp/coupon.pid"
dir = "./"
trace = false
debug = false

[log]
dir = "/data/log/coupon"

[bm]
	addr = "0.0.0.0:9001"
	maxListen = 10
	timeout = "1s"

[auth]
    managerHost = "http://manager.bilibili.co"
    dashboardHost = "http://dashboard-mng.bilibili.co"
    dashboardCaller = "manager-go"
    [auth.DsHTTPClient]
    key = "manager-go"
    secret = "949bbb2dd3178252638c2407578bc7ad"
    dial = "1s"
    timeout = "1s"
    keepAlive = "60s"
    [auth.DsHTTPClient.breaker]
    window  = "3s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100
    [auth.MaHTTPClient]
    key = "f6433799dbd88751"
    secret = "36f8ddb1806207fe07013ab6a77a3935"
    dial = "1s"
    timeout = "1s"
    keepAlive = "60s"
    [auth.MaHTTPClient.breaker]
    window  = "3s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100
    [auth.session]
    sessionIDLength = 32
    cookieLifeTime = 1800
    cookieName = "mng-go"
    domain = ".bilibili.co"
    [auth.session.Memcache]
    name = "go-business/auth"
    proto = "tcp"
    addr = "172.16.33.54:11211"
    active = 5
    idle = 5
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"

[mysql]
	addr = "127.0.0.1:3306"
	dsn = "root:123456@tcp(127.0.0.1:3306)/bilibili_coupon?timeout=2s&readTimeout=2s&writeTimeout=2s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
	readDSN = ["root:123456@tcp(127.0.0.1:3306)/bilibili_coupon?timeout=2s&readTimeout=2s&writeTimeout=2s&parseTime=true&loc=Local&charset=utf8,utf8mb4"]
    active = 20
	idle = 10
	idleTimeout ="4h"
	queryTimeout = "1s"
	execTimeout = "1s"
	tranTimeout = "2s"
	[mysql.breaker]
	window = "3s"
	sleep = "100ms"
	bucket = 10
	ratio = 0.5
	request = 100

[rpcClient2]
    [rpcClient2.coupon]

[memcache]
	name = "coupon"
	proto = "tcp"
	addr = "172.18.33.60:11237"
	idle = 5
	active = 10
	dialTimeout = "1s"
	readTimeout = "1s"
	writeTimeout = "1s"
	idleTimeout = "10s"
	expire = "24h"

[prop]
messageURL="http://message.bilibili.co"
salarySleepTime="10ms"
allowanceTableCount=10
salaryMsgOpen=true
msgSysnSize=10

[HTTPClient]
	key = "f022126a8a365e20"
	secret = "b7b86838145d634b487e67b811b8fab2"
	dial = "30ms"
	timeout = "100ms"
	keepAlive = "60s"
	[HTTPClient.breaker]
	window  = "10s"
	sleep   = "100ms"
	bucket  = 10
	ratio   = 0.5
	request = 100
