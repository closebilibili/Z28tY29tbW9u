version = "1.0.0"
user = "nobody"
dir = "./"
family = "tv-admin"
trace = false
debug = false
env = "uat"

[cfg]
    playpath = "upos-hz-tvshenhe.acgvideo.com"
    playurlAPI = "http://videodispatch-pgc.bilibili.co/v2/playurl"
    UPlayurlAPI = "http://uat-tv-ugc.bilibili.co/v2/playurl"
    auditRSize = 20
    intervLimit = 100
    SearInterMax = 20
    PGCTypes = ["番剧","电视剧","电影","纪录片",]
    PgcNames = {1 = "番剧",2="电影",3="纪录片",4="国创",5="电视剧"}
    ModIntMaxSize = 100
    TypesLoad = "2h"
    MangoErr = "以下内容因下架被删除推荐："
    LoadSnFre = "30m"
    [cfg.RefLabel]
        Fre = "24h"
        PGCApi = "http://bangumi.bilibili.com/media/web_api/search/v2/condition"
        UgcType = "二级分区"
        UgcTime = "时间"
        AllValue = "-1"
        AllName = "全部"
    [cfg.Abnormal]
        CriticalCid = 12780000
        AbnormHours = 24
        ReloadFre = "5m"
        ExportTitles = ["cid","video_title","ctime","aid","arc_title","pub_time"]
    [cfg.SupportCat]
        PGCTypes = [1,2,3,4,5]
        UGCTypes = [3,4,36,155,160]
        ReloadFre = "10m"
    [cfg.AuditConsult]
        LikeLimit = 50
        UnshelveNb = 10
        MatchPS = 50000
    [cfg.Hosts]
        ESUgc = "http://uat-manager.bilibili.co/x/admin/search/query"
        Manager = "http://uat-manager.bilibili.co"
    [cfg.EsIdx]
        [cfg.EsIdx.UgcIdx]
            Business = "tv_ugc_archive"
            Index = "tv_ugc_archive"

[log]
dir = "/data/log/tv-admin/"

[orm]
dsn = "test:test@tcp(172.16.33.205:3308)/bilibili_tv?timeout=5s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
active = 5
idle = 5
idleTimeout = "4h"

[HTTPServer]
    addr = "0.0.0.0:6683"
    timeout = "1s"

[ormshow]
dsn = "test:test@tcp(172.16.33.205:3308)/bilibili_show?timeout=5s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
active = 5
idle = 5
idleTimeout = "4h"

[httpSearch]
    fullURL = "http://android-apk.bilibili.co/api/v1/archive/pack/apk"
    key = "89ffc6e896106fd3"
    secret = "1359cdbaf9ff6e2f9b6251579d966101"
    dial = "1s"
    timeout = "8s"
    keepAlive = "60s"
    timer = 1000
    [httpSearch.breaker]
    window  = "3s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100

[identify]
    whiteAccessKey = ""
    whiteMid = 0
    csrfOn = true
    [identify.app]
    key = "9cfc54570033cd61"
    secret = "9d63835fa38fe58a62d9f49ef5da296f"
    [identify.memcache]
    name = "go-business/identify"
    proto = "tcp"
    addr = "172.16.33.54:11211"
    active = 100
    idle = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"
    [identify.host]
    auth = "http://passport.bilibili.co"
    secret = "http://open.bilibili.co"
  [identify.httpClient]
    key = "3c4e41f926e51656"
    secret = "26a2095b60c24154521d24ae62b885bb"
    dial = "30ms"
    timeout = "100ms"
    keepAlive = "60s"
    [identify.httpClient.breaker]
    window  = "10s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100
    [identify.httpClient.url]
    "http://passport.bilibili.co/intranet/auth/tokenInfo" = {timeout = "100ms"}
    "http://passport.bilibili.co/intranet/auth/cookieInfo" = {timeout = "100ms"}
    "http://open.bilibili.co/api/getsecret" = {timeout = "500ms"}

[auth]
    managerHost = "http://uat-manager.bilibili.co"
    dashboardHost = "http://dashboard-mng.bilibili.co"
    dashboardCaller = "manager-go"
    [auth.DsHTTPClient]
    key = "manager-go"
    secret = "949bbb2dd3178252638c2407578bc7ad"
    dial = "1s"
    timeout = "1s"
    keepAlive = "60s"
    [auth.DsHTTPClient.breaker]
    window  = "3s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100
    [auth.MaHTTPClient]
    key = "f6433799dbd88751"
    secret = "36f8ddb1806207fe07013ab6a77a3935"
    dial = "1s"
    timeout = "1s"
    keepAlive = "60s"
    [auth.MaHTTPClient.breaker]
    window  = "3s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100
    [auth.session]
    sessionIDLength = 32
    cookieLifeTime = 1800
    cookieName = "mng-go"
    domain = ".bilibili.co"
    [auth.session.Memcache]
    name = "go-business/auth"
    proto = "tcp"
    addr = "172.16.33.54:11211"
    active = 10
    idle = 10
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"

[httpClient]
    key    = "cadf599ba8b3796a"
    secret = "42fbb979aa742013d713a088f912673b"
    dial      = "500ms"
    timeout   = "2s"
    keepAlive = "60s"
    timer = 10
    [httpClient.breaker]
        window  = "10s"
        sleep   = "100ms"
        bucket  = 10
        ratio   = 0.5
        request = 100

[URLConf]
    getRemotePanelUrl = "https://gwboss.test.atianqi.com:443/boss/inter/bili/getBiliProduct"
    syncPanelUrl = "https://gwboss.test.atianqi.com:443/boss/inter/bili/editBiliProd"

[YSTParam]
    queryPanelType  = "allvod"
    insertPanelType = "svod"
    source          = "snm_bilibili"
    insert          = "1"
    update          = "2"


[bfs]
host        = "http://uat-bfs.bilibili.co"
bucket      = "test"
key         = "221bce6492eba70f"
secret      = "6eb80603e85842542f9736eb13b7e3"
timeout     = 1000

[archiveRPC]
    timeout = "500ms"
    [archiveRPC.conf]
    domain = "api.bilibili.co"
    key = "53e2fa226f5ad348"
    secret = "3cf6bd1b0ff671021da5f424fea4b04a"

[accountRPC]
    timeout = "500ms"
    [accountRPC.conf]
    domain = "api.bilibili.co"
    key = "53e2fa226f5ad348"
    secret = "3cf6bd1b0ff671021da5f424fea4b04a"

[memcache]
	name = "feed-admin"
	proto = "tcp"
    addr = "172.18.33.60:11236"
    active = 10
    idle = 10
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"
    cmsExpire = "36h"
