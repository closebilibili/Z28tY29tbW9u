syntax = "proto3";

package banned_service.v1;

option go_package = "v1";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service ShieldMng {
    
    /** 查询用户是否被屏蔽
     * 
     */   
    rpc is_shield_user (ShieldMngIsShieldUserReq) returns (ShieldMngIsShieldUserResp);
}



message ShieldMngIsShieldUserReq {
    // 
    int64 uid = 1 [(gogoproto.jsontag) = "uid"];
    // 
    int64 shield_uid = 2 [(gogoproto.jsontag) = "shield_uid"];
}

message ShieldMngIsShieldUserResp {
    // 
    int64 code = 1 [(gogoproto.jsontag) = "code"];
    // 
    string msg = 2 [(gogoproto.jsontag) = "msg"];
    // 
    Data data = 3 [(gogoproto.jsontag) = "data"];
       
    message Data {
        // 
        int64 uid = 1 [(gogoproto.jsontag) = "uid"];
        // 
        int64 shield_uid = 2 [(gogoproto.jsontag) = "shield_uid"];
        // 
        bool is_shield_user = 3 [(gogoproto.jsontag) = "is_shield_user"];
    }
}