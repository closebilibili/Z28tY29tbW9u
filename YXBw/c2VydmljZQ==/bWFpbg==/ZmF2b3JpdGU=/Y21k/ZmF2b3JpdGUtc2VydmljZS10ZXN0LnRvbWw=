[log]
stdout = true

[fav]
maxFolders = 50
maxPagesize = 30
maxBatchSize = 1000
maxDataSize = 2000
MaxRecentSize= 10
maxNameLen = 30
maxOperationNum = 30
defaultFolderLimit = 100000
normalFolderLimit = 999
apiHost = "http://api.bilibili.co"
expire = "24h"
cleanCDTime = "1m"

[platform]
    maxFolders = 100
    maxNameLen = 60
    maxDescLen = 250

[bm]
    network = "tcp"
    addr = "0.0.0.0:7671"
    timeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"

[httpClient]    
key = "0dc647722719f2ea"
secret = "a3769b553680da10b40994265fb48d20"
dial = "30ms"
timeout = "900ms"
keepAlive = "60s"
timer = 128
    [httpClient.breaker]
    window  ="3s"
    sleep   ="100ms"
    bucket  = 10
    ratio   = 0.1
    request = 100

[topic]
    topicURL = "http://matsuri.bilibili.co/activity/pages"
    [topic.httpClient]
    key = "0dc647722719f2ea"
    secret = "a3769b553680da10b40994265fb48d20"
    dial = "30ms"
    timeout = "800ms"
    keepAlive = "60s"
    timer = 128
    [topic.httpClient.breaker]
    window  ="3s"
    sleep   ="100ms"
    bucket  = 10
    ratio   = 0.1
    request = 100



[mysql]
    [mysql.fav]
    addr = "172.22.34.101:3306"
    dsn = "test_3306:UJPZaGKjpb2ylFx3HNhmLuwOYft4MCAi@tcp(172.22.34.101:3306)/bilibili_fav?timeout=2s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
    active = 20
    idle = 10
    idleTimeout ="4h"
    queryTimeout = "1s"
    execTimeout = "1s"
    tranTimeout = "1s"
    [mysql.fav.breaker]
    window = "3s"
    sleep = "100ms"
    bucket = 10
    ratio = 0.5
    request = 100
    [mysql.read]
    addr = "172.22.34.101:3306"
    dsn = "test_3306:UJPZaGKjpb2ylFx3HNhmLuwOYft4MCAi@tcp(172.22.34.101:3306)/bilibili_fav?timeout=2s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
    active = 20
    idle = 10
    idleTimeout ="4h"
    queryTimeout = "1s"
    execTimeout = "1s"
    tranTimeout = "1s"
    [mysql.read.breaker]
    window = "3s"
    sleep = "100ms"
    bucket = 10
    ratio = 0.5
    request = 100
    [mysql.push]
    addr = "172.22.34.101:3306"
    dsn = "test_3306:UJPZaGKjpb2ylFx3HNhmLuwOYft4MCAi@tcp(172.22.34.101:3306)/bilibili_fav?timeout=2s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
    active = 20
    idle = 10
    idleTimeout ="4h"
    queryTimeout = "1s"
    execTimeout = "1s"
    tranTimeout = "1s"
    [mysql.push.breaker]
    window = "3s"
    sleep = "100ms"
    bucket = 10
    ratio = 0.5
    request = 100

[supervisor]
    on = true
    begin = "2017-10-01T15:04:05+08:00"
    end = "2017-10-22T11:10:05+08:00"

[antispam]
	on=true
    second=5
    n=10
    hour=1
    m=5
    [antispam.redis]
        name = "favorite/favorite"
        proto = "tcp"
        addr = "172.16.33.54:6379"
        idle = 100
        active = 100
        dialTimeout = "500ms"
        readTimeout = "1s"
        writeTimeout = "1s"
        idleTimeout = "80s"
        expire = "10m"

[memcache]
proto = "tcp"
addr = "172.18.33.61:11231"
active = 10
idle = 2
dialTimeout = "30ms"
readTimeout = "150ms"
writeTimeout = "150ms"
idleTimeout = "80s"
expire = "24h"

[redis]
name = "favorite/favorite"
proto = "tcp"
addr = "172.18.33.61:6808"
active = 60000
idle = 128
dialTimeout = "30ms"
readTimeout = "50ms"
writeTimeout = "50ms"
idleTimeout = "80s"
expire = "32h"
coverExpire = "30m"

[jobDatabus]
key = "170e302355453683"
secret= "3d0e8db7bed0503949e545a469789279"
group= "FavoriteJob-MainCommunity-P"
topic= "FavoriteJob-T"
action="pub"
name = "favorite/job"
proto = "tcp"
addr = "172.18.33.50:6205"
idle = 1
active = 10
dialTimeout = "1s"
readTimeout = "1s"
writeTimeout = "1s"
idleTimeout = "10s"
expire = "1h"


[rpcServer]
    proto = "tcp"
    addr = "0.0.0.0:7679"
    weight = 10

[rpcClient]
    [rpcClient.account]
        timeout = "150ms"
    [rpcClient.archive]
        timeout = "150ms"
    [rpcClient.filter]
        timeout = "1s"
    [rpcClient.rank]
        timeout = "1s"
