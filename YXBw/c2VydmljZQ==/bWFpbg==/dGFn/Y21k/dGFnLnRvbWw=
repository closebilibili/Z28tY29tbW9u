# This is a TOML document. Boom.
version = "1.0.0"
user = "nobody"
pid = "/tmp/tag-service.pid"
dir = "./"
perf = "127.0.0.1:7050"
family = "tag-service"
env = "test"

[routerconfig]
	[routerconfig.limit]
	    limit=0.1
        Burst=2000

[app]
key = "3c4e41f926e51656"
secret = "26a2095b60c24154521d24ae62b885bb"

[xlog]
    dir = "/data/log/tag-service/"

[identify]
    whiteAccessKey = ""
    whiteMid = 0
	csrfOn = false
    [identify.app]
    key = "3c4e41f926e51656"
    secret = "26a2095b60c24154521d24ae62b885bb"
    [identify.memcache]
    name = "go-business/identify"
    proto = "tcp"
    addr = "172.16.0.148:11211"
    active = 5
    idle = 10
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"    
    [identify.host]
    auth = "http://passport.bilibili.co"
    secret = "http://open.bilibili.co"
    [identify.httpClient]
    dial = "30ms"
    timeout = "100ms"
    keepAlive = "60s"
    key = "3c4e41f926e51656"
    secret = "26a2095b60c24154521d24ae62b885bb"
    [identify.httpClient.breaker]
    window  = "10s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100
    [identify.httpClient.url]
    "http://passport.bilibili.co/intranet/auth/tokenInfo" = {timeout = "100ms"}
    "http://passport.bilibili.co/intranet/auth/cookieInfo" = {timeout = "100ms"}
    "http://open.bilibili.co/api/getsecret" = {timeout = "500ms"}

[ecode]
   domain = "172.16.33.248:6401"
    all = "1h"
    diff = "10m"
    [ecode.clientconfig]
        dial      = "2000ms"
        timeout   = "2s"
        keepAlive = "10s"
        timer     = 128
        key = "test"
        secret = "e6c4c252dc7e3d8a90805eecd7c73396"
        [ecode.clientconfig.breaker]
            window  ="3s"
            sleep   ="100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100

[multiHttp]
    [multiHttp.outer]
        addrs = ["0.0.0.0:7051"]
        maxListen = 1000
    [multiHttp.inner]
        addrs = ["0.0.0.0:7052"]
        maxListen = 1000
    [multiHttp.local]
        addrs = ["0.0.0.0:7053"]
        maxListen = 1000

[supervision]
    [supervision.sixFour]
        button = false

[rpcServer2]
    [[rpcServer2.servers]]
    proto = "tcp"
    addr = ":7059"
    weight = 10
    [rpcServer2.zookeeper]
    root = "/microservice/tag-service/"
    addrs = ["172.18.33.172:2181"]
    timeout = "1s"

[mysql]
    addr = "172.16.33.205"
    dsn = "test:test@tcp(172.16.33.205:3308)/platform_tag?timeout=5s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
    active = 1
    idle = 1
    IdleTimeout = "1s"
    QueryTimeout = "1s"
    ExecTimeout = "1s"
    TranTimeout = "1s"
    [mysql.breaker]
        window  ="1s"
        sleep   ="100ms"
        bucket  = 10
        ratio   = 0.1
        request = 100

[redis]
    name = "tag-service"
    proto = "tcp"
    addr = "172.16.33.54:6382"
    active = 10
    idle = 5
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    expire = "8h"
    subExpire = "8h"
    actionExpire = "1h"
    operateExpire = "24h"

[memcache]
    name = "tag-service"
    proto = "tcp"
    addr = "172.16.33.54:11214"
    idle = 5
    active = 10
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"
    tagExpire = "24h"
    ResExpire = "24h"

[rpc]
    [rpc.account]
        pullInterval = "10s"
        group = "groupapp"
        [rpc.account.client]
            token="123456"
            timeout = "1s"
            timer = 1000
            [rpc.account.client.breaker]
            window  = "3s"
            sleep   = "100ms"
            bucket  = 10
            ratio   = 0.5
            request = 100
        [rpc.account.zookeeper]
            root = "/microservice/account-service/"
            addrs = ["172.18.33.172:2181"]
            timeout = "30s"
    [rpc.archive]
        pullInterval = "10s"
        group = "test"
        [rpc.archive.client]
            token="123456"
            proto = "tcp"
            addr = "172.16.33.56:6089"
            timeout = "1s"
            timer = 1000
            [rpc.archive.client.breaker]
                window  ="10s"
                sleep   ="10ms"
                bucket  = 10
                ratio   = 0.5
                request = 100
        [rpc.archive.zookeeper]
            root = "/microservice/archive-service/"
            addrs = ["172.18.33.172:2181"]
            timeout = "30s"

[httpClient]
    dial      = "100ms"
    timeout   = "1s"
    keepAlive = "60s"
    timer     = 128
    key = "3c4e41f926e51656"
    secret = "26a2095b60c24154521d24ae62b885bb"
    [httpClient.breaker]
    window  = "3s"
    sleep   = "100ms"
    bucket  = 10
    ratio   = 0.5
    request = 100

[url]
account = "http://account.bilibili.com"
archive = "http://archive.api.bilibili.co"
apiCo = "http://api.bilibili.co"
bigData = "http://data.bilibili.co"

[tag]
	SubSharding       = 10
	ResTagSharding    = 100
	ResTagLogSharding = 500
	TnameMaxLen       = 20
	FeedBackMaxLen    = 30
	SubTagMaxNum      = 200
	SubArcMaxNum      = 200
	LikeLimitToLock   = 100
	MaxResPageSize    = 20
	MaxResLimit       = 1000
	MaxSelTagNum      = 200
	ResTagMaxNum      = 12
	ResTagAddLevel    = 3
	ResTagDelLevel    = 4
	ResTagRptLevel    = 1
	ResTagLikeLevel   = 1
	ResTagHateLevel   = 1
	ResTagAddMaxNum   = 50
	ResTagDelMaxNum   = 10
	ResTagDelSomeNum  = 2
	ResTagLikeMaxNum  = 50
	ResTagHateMaxNum  = 50
	ResTagRptMaxNum   = 30
    ResOidLimit      = 1000