# This is a TOML document. Boom.

version = "3.0.0"
user = "nobody"
pid = "/tmp/archive-service.pid"
dir = "./"
perf = "127.0.0.1:6080"
checkFile = "/data/www/archive.html"
family = "archive-service"
videoshotURI = "http://i3.hdslb.com/bfs/videoshot/"
videoshotKey = "f555a0f529152dc8c6b1ae60c2af4164"
tick = "5m"

[xlog]
dir = "/data/log/archive-service/"
    [xlog.elk]
    project = "archive-service"
    addr = "172.18.20.17:8520"
    chanSize = 1024

[ecode]
service = "archive-service"
    [ecode.mysql]
    name = "[archive]tcp@172.16.0.148:3306"
    dsn = "test:test@tcp(172.16.0.148:3306)/bilibili_apm?timeout=5s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
    active = 5
    idle = 5

[statsd]
project = "archive-service"
addr = "172.18.20.15:8200"
chanSize = 10240

[app]
key = "53e2fa226f5ad348"
secret = "3cf6bd1b0ff671021da5f424fea4b04a"

[multiHTTP]
    [multiHTTP.inner]
    addrs = ["0.0.0.0:6081"]
    maxListen = 1000
    [multiHTTP.local]
    addrs = ["0.0.0.0:6082"]
    maxListen = 100

[rpcServer2]
[[rpcServer2.servers]]
    proto = "tcp"
    addr = "127.0.0.1:6089"
    weight = 10
[rpcServer2.zookeeper]
    root = "/microservice/archive-service/"
    addrs = ["127.0.0.1:2181"]
    timeout = "1s"

[db]
    [db.arc]
    name = "[archive]tcp@172.16.0.148:3306"
    dsn = "test:test@tcp(172.16.0.148:3306)/bilibili_archive?timeout=5s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8,utf8mb4"
    active = 5
    idle = 5
    [db.dede]
    name = "[dede]tcp@172.16.0.5:3306"
    dsn = "bilibili:5Fq2M4FbPZK4fhtE@tcp(172.16.0.5:3306)/bilibili?timeout=5s&readTimeout=5s&writeTimeout=5s&parseTime=true&loc=Local&charset=utf8"
    active = 5
    idle = 5

[identify]
    whiteAccessKey = ""
    whiteMid = 0
    [identify.app]
    key = "6a29f8ed87407c11"
    secret = "d3c5a85f5b895a03735b5d20a273bc57"
    [identify.memcache]
    name = "go-business/identify"
    proto = "tcp"
    addr = "172.16.33.54:11211"
    active = 5
    idle = 10
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"
    [identify.host]
    auth = "http://passport.bilibili.com"
    secret = "http://open.bilibili.com"
    [identify.authHTTPClient]
    dial = "1s"
    timeout = "1s"
    keepAlive = "60s"
    timer = 1000
    [identify.secretHTTPClient]
    dial = "1s"
    timeout = "1s"
    keepAlive = "60s"
    timer = 1000

[memcache]
    [memcache.archive]
    name = "archive-service"
    proto = "tcp"
    addr = "172.16.0.148:11211"
    active = 100
    idle = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"
    expire = "10s"
    [memcache.video]
    name = "archive-service"
    proto = "tcp"
    addr = "172.16.0.148:11211"
    active = 100
    idle = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "80s"
    expire = "10s"

[redis]
    [redis.videoshot]
    name = "archive-service/videoshot"
    proto = "tcp"
    addr = "172.16.0.148:6379"
    idle = 100
    active = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    expire = "10s"
    [redis.archive]
    name = "archive-service/archive"
    proto = "tcp"
    addr = "172.16.0.148:6379"
    idle = 100
    active = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    expire = "8h"
    [redis.region]
    name = "archive-service/region"
    proto = "tcp"
    addr = "172.16.0.148:6379"
    idle = 100
    active = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    [redis.moment]
    name = "archive-service/moment"
    proto = "tcp"
    addr = "172.16.0.148:6379"
    idle = 100
    active = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    expire = "10s"
    [redis.relation]
    name = "archive-service/relation"
    proto = "tcp"
    addr = "172.16.0.148:6379"
    idle = 1
    active = 1
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    [redis.share]
    name = "archive-service/share"
    proto = "tcp"
    addr = "172.16.0.148:6379"
    idle = 1
    active = 1
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    expire = "10s"
    [redis.stat]
    name = "archive-service/stat"
    proto = "tcp"
    addr = "172.16.0.148:6379"
    idle = 1
    active = 1
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    expire = "10s"

[hbase]
master = ""
meta = ""
dialTimeout = "1s"
readTimeout = "200ms"
readsTimeout = "1s"
writeTimeout = "200ms"
writesTimeout = "200ms"
    [hbase.zookeeper]
    root = ""
    addrs = ["172.16.33.45:2181"]
    timeout = "30s"

[accountRPC]
    pullInterval = "10s"
    [accountRPC.client]
    proto = "tcp"
    addr = "127.0.0.1:6079"
    timeout = "1s"
    timer = 1000
    [[accountRPC.backup]]
    proto = "tcp"
    addr = "127.0.0.1:6079"
    timeout = "1s"
    timer = 1000
    [accountRPC.zookeeper]
    root = "/microservice/account-service/"
    addrs = ["127.0.0.1:2181"]
    timeout = "1s"

[tracer]
proto = "udp"
addr = "172.16.33.46:5140"
tag = "platform/archive-service"


[kafkaProducer]
statTopic = "stat"
firstShareTopic = "share_first"
brokers = ["172.16.0.148:9092"]
sync = false
    [kafkaProducer.zookeeper]
    root = "/kafka"
    addrs = ["172.16.0.148:2181"]
    timeout = "200ms"

[databus]
key = "0PtNTguCX35XCtPpjUGC"
secret= "0PtNTguCX35XCtPpjUGD"
group= "Stat-UGC-P"
topic= "Stat-T"
action="pub"
    [databus.redis]
    name = "archive-service/stat"
    proto = "tcp"
    addr = "172.16.33.56:6201"
    idle = 100
    active = 100
    dialTimeout = "1s"
    readTimeout = "1s"
    writeTimeout = "1s"
    idleTimeout = "10s"
    expire = "1h"
