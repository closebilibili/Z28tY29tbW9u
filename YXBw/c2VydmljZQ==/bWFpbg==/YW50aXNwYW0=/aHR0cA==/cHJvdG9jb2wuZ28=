package http

const (
	// ProtocolArea .
	ProtocolArea = "area"

	// ProtocolState .
	ProtocolState = "state"
	// ProtocolSearch .
	ProtocolSearch = "q"
	// ProtocolSynced .
	ProtocolSynced = "synced"
	// ProtocolAdminID .
	ProtocolAdminID = "admin_id"

	// ProtocolCurPage .
	ProtocolCurPage = "cur_page"
	// ProtocolPerPage .
	ProtocolPerPage = "per_page"

	// ProtocolCTime .
	ProtocolCTime = "ctime"
	// ProtocolCTimeStart .
	ProtocolCTimeStart = "ctime_start"
	// ProtocolCTimeEnd .
	ProtocolCTimeEnd = "ctime_end"

	// ProtocolOrder .
	ProtocolOrder = "order"
	// ProtocolOrderBy .
	ProtocolOrderBy = "order_by"
	// ProtocolOrderASC .
	ProtocolOrderASC = "asc"
	// ProtocolOrderDESC .
	ProtocolOrderDESC = "desc"

	// ProtocolCode .
	ProtocolCode = "code"
	// ProtocolData .
	ProtocolData = "data"
	// ProtocolMessage .
	ProtocolMessage = "msg"
	// ProtocolTotalCounts .
	ProtocolTotalCounts = "total_counts"

	// ProtocolRegexpID .
	ProtocolRegexpID = "id"
	// ProtocolRegexpName .
	ProtocolRegexpName = "name"
	// ProtocolRegexpContent .
	ProtocolRegexpContent = "content"
	// ProtocolRegexpOperation .
	ProtocolRegexpOperation = "op"

	// ProtocolRuleDuration .
	ProtocolRuleDuration = "time_span"
	// ProtocolRuleLimitType .
	ProtocolRuleLimitType = "limit_type"
	// ProtocolRuleLimitScope .
	ProtocolRuleLimitScope = "limit_scope"
	// ProtocolRuleAllowedCounts .
	ProtocolRuleAllowedCounts = "allowed_counts"

	// ProtocolKeywordID .
	ProtocolKeywordID = "id"
	// ProtocolKeywordIDs .
	ProtocolKeywordIDs = "ids"
	// ProtocolKeywordTag .
	ProtocolKeywordTag = "tag"
	// ProtocolKeywordExport .
	ProtocolKeywordExport = "export"
	// ProtocolKeywordHitCounts .
	ProtocolKeywordHitCounts = "hit_counts"

	// ProtocolKeywordOpWhite .
	ProtocolKeywordOpWhite = "white"
	// ProtocolKeywordOpBlack .
	ProtocolKeywordOpBlack = "black"
	// ProtocolKeywordOperation .
	ProtocolKeywordOperation = "op"
	// ProtocolKeywordOpDefaultLimit .
	ProtocolKeywordOpDefaultLimit = "limit"
	// ProtocolKeywordOpRestrictLimit .
	ProtocolKeywordOpRestrictLimit = "restrict"
	// ProtocolKeywordOpBlackAndDeleteReply .
	ProtocolKeywordOpBlackAndDeleteReply = "black_and_del"

	// ProtocolKeywordSenderID .
	ProtocolKeywordSenderID = "sender_id"
	// ProtocolKeywordSubjectID .
	ProtocolKeywordSubjectID = "oid"
	// ProtocolKeywordContent .
	ProtocolKeywordContent = "content"
)
