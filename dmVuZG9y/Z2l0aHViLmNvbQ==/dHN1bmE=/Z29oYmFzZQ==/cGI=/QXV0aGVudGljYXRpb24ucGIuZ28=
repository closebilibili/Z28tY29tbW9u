// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Authentication.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TokenIdentifier_Kind int32

const (
	TokenIdentifier_HBASE_AUTH_TOKEN TokenIdentifier_Kind = 0
)

var TokenIdentifier_Kind_name = map[int32]string{
	0: "HBASE_AUTH_TOKEN",
}
var TokenIdentifier_Kind_value = map[string]int32{
	"HBASE_AUTH_TOKEN": 0,
}

func (x TokenIdentifier_Kind) Enum() *TokenIdentifier_Kind {
	p := new(TokenIdentifier_Kind)
	*p = x
	return p
}
func (x TokenIdentifier_Kind) String() string {
	return proto.EnumName(TokenIdentifier_Kind_name, int32(x))
}
func (x *TokenIdentifier_Kind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TokenIdentifier_Kind_value, data, "TokenIdentifier_Kind")
	if err != nil {
		return err
	}
	*x = TokenIdentifier_Kind(value)
	return nil
}
func (TokenIdentifier_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

type AuthenticationKey struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ExpirationDate   *int64 `protobuf:"varint,2,req,name=expiration_date,json=expirationDate" json:"expiration_date,omitempty"`
	Key              []byte `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationKey) Reset()                    { *m = AuthenticationKey{} }
func (m *AuthenticationKey) String() string            { return proto.CompactTextString(m) }
func (*AuthenticationKey) ProtoMessage()               {}
func (*AuthenticationKey) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AuthenticationKey) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AuthenticationKey) GetExpirationDate() int64 {
	if m != nil && m.ExpirationDate != nil {
		return *m.ExpirationDate
	}
	return 0
}

func (m *AuthenticationKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type TokenIdentifier struct {
	Kind             *TokenIdentifier_Kind `protobuf:"varint,1,req,name=kind,enum=pb.TokenIdentifier_Kind" json:"kind,omitempty"`
	Username         []byte                `protobuf:"bytes,2,req,name=username" json:"username,omitempty"`
	KeyId            *int32                `protobuf:"varint,3,req,name=key_id,json=keyId" json:"key_id,omitempty"`
	IssueDate        *int64                `protobuf:"varint,4,opt,name=issue_date,json=issueDate" json:"issue_date,omitempty"`
	ExpirationDate   *int64                `protobuf:"varint,5,opt,name=expiration_date,json=expirationDate" json:"expiration_date,omitempty"`
	SequenceNumber   *int64                `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *TokenIdentifier) Reset()                    { *m = TokenIdentifier{} }
func (m *TokenIdentifier) String() string            { return proto.CompactTextString(m) }
func (*TokenIdentifier) ProtoMessage()               {}
func (*TokenIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *TokenIdentifier) GetKind() TokenIdentifier_Kind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return TokenIdentifier_HBASE_AUTH_TOKEN
}

func (m *TokenIdentifier) GetUsername() []byte {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *TokenIdentifier) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return 0
}

func (m *TokenIdentifier) GetIssueDate() int64 {
	if m != nil && m.IssueDate != nil {
		return *m.IssueDate
	}
	return 0
}

func (m *TokenIdentifier) GetExpirationDate() int64 {
	if m != nil && m.ExpirationDate != nil {
		return *m.ExpirationDate
	}
	return 0
}

func (m *TokenIdentifier) GetSequenceNumber() int64 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

// Serialization of the org.apache.hadoop.security.token.Token class
// Note that this is a Hadoop class, so fields may change!
type Token struct {
	// the TokenIdentifier in serialized form
	// Note: we can't use the protobuf directly because the Hadoop Token class
	// only stores the serialized bytes
	Identifier       []byte `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Password         []byte `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Service          []byte `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Token) GetIdentifier() []byte {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Token) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *Token) GetService() []byte {
	if m != nil {
		return m.Service
	}
	return nil
}

// RPC request & response messages
type GetAuthenticationTokenRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAuthenticationTokenRequest) Reset()                    { *m = GetAuthenticationTokenRequest{} }
func (m *GetAuthenticationTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAuthenticationTokenRequest) ProtoMessage()               {}
func (*GetAuthenticationTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type GetAuthenticationTokenResponse struct {
	Token            *Token `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAuthenticationTokenResponse) Reset()                    { *m = GetAuthenticationTokenResponse{} }
func (m *GetAuthenticationTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAuthenticationTokenResponse) ProtoMessage()               {}
func (*GetAuthenticationTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *GetAuthenticationTokenResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type WhoAmIRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *WhoAmIRequest) Reset()                    { *m = WhoAmIRequest{} }
func (m *WhoAmIRequest) String() string            { return proto.CompactTextString(m) }
func (*WhoAmIRequest) ProtoMessage()               {}
func (*WhoAmIRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

type WhoAmIResponse struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	AuthMethod       *string `protobuf:"bytes,2,opt,name=auth_method,json=authMethod" json:"auth_method,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WhoAmIResponse) Reset()                    { *m = WhoAmIResponse{} }
func (m *WhoAmIResponse) String() string            { return proto.CompactTextString(m) }
func (*WhoAmIResponse) ProtoMessage()               {}
func (*WhoAmIResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *WhoAmIResponse) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *WhoAmIResponse) GetAuthMethod() string {
	if m != nil && m.AuthMethod != nil {
		return *m.AuthMethod
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthenticationKey)(nil), "pb.AuthenticationKey")
	proto.RegisterType((*TokenIdentifier)(nil), "pb.TokenIdentifier")
	proto.RegisterType((*Token)(nil), "pb.Token")
	proto.RegisterType((*GetAuthenticationTokenRequest)(nil), "pb.GetAuthenticationTokenRequest")
	proto.RegisterType((*GetAuthenticationTokenResponse)(nil), "pb.GetAuthenticationTokenResponse")
	proto.RegisterType((*WhoAmIRequest)(nil), "pb.WhoAmIRequest")
	proto.RegisterType((*WhoAmIResponse)(nil), "pb.WhoAmIResponse")
	proto.RegisterEnum("pb.TokenIdentifier_Kind", TokenIdentifier_Kind_name, TokenIdentifier_Kind_value)
}

func init() { proto.RegisterFile("Authentication.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 497 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x51, 0x6f, 0x12, 0x41,
	0x10, 0xc7, 0xbd, 0xa3, 0x87, 0x32, 0x45, 0xa0, 0x9b, 0xd6, 0x5c, 0x88, 0x2d, 0x78, 0x2f, 0x25,
	0xc6, 0x9c, 0x09, 0xdf, 0x00, 0x62, 0x23, 0x48, 0x5a, 0xcd, 0x16, 0xe3, 0x93, 0x5e, 0x16, 0x6e,
	0xda, 0xdb, 0x10, 0x76, 0xcf, 0xdb, 0x3d, 0x95, 0x47, 0xdf, 0xfc, 0x18, 0xbe, 0xfa, 0x2d, 0xcd,
	0xee, 0x16, 0x04, 0x52, 0xfb, 0x76, 0xf3, 0x9b, 0xff, 0xcd, 0xfc, 0xff, 0x99, 0x2c, 0x1c, 0x0f,
	0x4a, 0x9d, 0xa1, 0xd0, 0x7c, 0xce, 0x34, 0x97, 0x22, 0xce, 0x0b, 0xa9, 0x25, 0xf1, 0xf3, 0x59,
	0xf4, 0x05, 0x8e, 0x76, 0x7b, 0x13, 0x5c, 0x91, 0x06, 0xf8, 0x3c, 0x0d, 0xbd, 0xae, 0xdf, 0x0b,
	0xa8, 0xcf, 0x53, 0x72, 0x0e, 0x4d, 0xfc, 0x91, 0xf3, 0xc2, 0x0a, 0x92, 0x94, 0x69, 0x0c, 0xfd,
	0xae, 0xdf, 0xab, 0xd0, 0xc6, 0x3f, 0xfc, 0x86, 0x69, 0x24, 0x2d, 0xa8, 0x2c, 0x70, 0x15, 0x56,
	0xba, 0x7e, 0xaf, 0x4e, 0xcd, 0x67, 0xf4, 0xd3, 0x87, 0xe6, 0x54, 0x2e, 0x50, 0x8c, 0x53, 0xb3,
	0xe3, 0x86, 0x63, 0x41, 0x5e, 0xc1, 0xc1, 0x82, 0x0b, 0xb7, 0xa0, 0xd1, 0x0f, 0xe3, 0x7c, 0x16,
	0xef, 0x49, 0xe2, 0x09, 0x17, 0x29, 0xb5, 0x2a, 0xd2, 0x86, 0x27, 0xa5, 0xc2, 0x42, 0xb0, 0xa5,
	0xdb, 0x5a, 0xa7, 0x9b, 0x9a, 0x9c, 0x40, 0x75, 0x81, 0xab, 0x84, 0xa7, 0x76, 0x65, 0x40, 0x83,
	0x05, 0xae, 0xc6, 0x29, 0x39, 0x05, 0xe0, 0x4a, 0x95, 0xe8, 0xac, 0x1e, 0x74, 0xbd, 0x5e, 0x85,
	0xd6, 0x2c, 0xb1, 0x2e, 0xef, 0x89, 0x13, 0x58, 0xcd, 0x7e, 0x9c, 0x73, 0x68, 0x2a, 0xfc, 0x5a,
	0xa2, 0x98, 0x63, 0x22, 0xca, 0xe5, 0x0c, 0x8b, 0xb0, 0xea, 0x84, 0x6b, 0x7c, 0x65, 0x69, 0xf4,
	0x1c, 0x0e, 0x8c, 0x63, 0x72, 0x0c, 0xad, 0xd1, 0x70, 0x70, 0x7d, 0x91, 0x0c, 0x3e, 0x4e, 0x47,
	0xc9, 0xf4, 0xfd, 0xe4, 0xe2, 0xaa, 0xf5, 0x28, 0xfa, 0x0c, 0x81, 0xcd, 0x47, 0xce, 0x00, 0xf8,
	0x26, 0x63, 0xe8, 0x75, 0xbd, 0x5e, 0x9d, 0x6e, 0x11, 0x13, 0x35, 0x67, 0x4a, 0x7d, 0x97, 0x45,
	0x1a, 0xfa, 0xb6, 0xbb, 0xa9, 0x49, 0x08, 0x8f, 0x15, 0x16, 0xdf, 0xf8, 0x1c, 0xc3, 0x8a, 0x6d,
	0xad, 0xcb, 0xa8, 0x03, 0xa7, 0x6f, 0x51, 0xef, 0x5e, 0xd1, 0xee, 0xa3, 0xc6, 0xa4, 0xd2, 0xd1,
	0x00, 0xce, 0xfe, 0x27, 0x50, 0xb9, 0x14, 0x0a, 0x49, 0x07, 0x02, 0x6d, 0x80, 0xf5, 0x74, 0xd8,
	0xaf, 0x6d, 0x4e, 0x42, 0x1d, 0x8f, 0x9a, 0xf0, 0xf4, 0x53, 0x26, 0x07, 0xcb, 0xf1, 0x7a, 0xe6,
	0x25, 0x34, 0xd6, 0xe0, 0x6e, 0xc6, 0xf6, 0x9d, 0xcc, 0x98, 0xda, 0xd6, 0x9d, 0x3a, 0x70, 0xc8,
	0x4a, 0x9d, 0x25, 0x4b, 0xd4, 0x99, 0x74, 0xd9, 0x6a, 0x14, 0x0c, 0xba, 0xb4, 0xa4, 0xff, 0xc7,
	0x83, 0x93, 0x5d, 0x83, 0xd7, 0x2e, 0x1d, 0x49, 0xe0, 0xd9, 0xfd, 0xe6, 0xc9, 0x0b, 0xe3, 0xf2,
	0xc1, 0xe4, 0xed, 0xe8, 0x21, 0xc9, 0x9d, 0xef, 0xd7, 0x50, 0x75, 0x49, 0xc8, 0x91, 0x51, 0xef,
	0xc4, 0x6c, 0x93, 0x6d, 0xe4, 0x7e, 0x18, 0xbe, 0x83, 0x97, 0xb2, 0xb8, 0x8d, 0x59, 0xce, 0xe6,
	0x19, 0xc6, 0x19, 0x4b, 0xa5, 0xcc, 0xe3, 0x6c, 0xc6, 0x14, 0xba, 0x77, 0x35, 0x2b, 0x6f, 0xe2,
	0x5b, 0x14, 0x58, 0x30, 0x8d, 0xe9, 0x70, 0xef, 0xe9, 0x7d, 0x30, 0x0a, 0x35, 0xf2, 0x7e, 0x79,
	0xde, 0x6f, 0xcf, 0xfb, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xa0, 0x34, 0x67, 0x99, 0x03, 0x00,
	0x00,
}
