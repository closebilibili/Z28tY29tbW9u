/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package pb;

import "Client.proto";
option java_package = "org.apache.hadoop.hbase.protobuf.generated";
option java_outer_classname = "MultiRowMutationProtos";
option java_generate_equals_and_hash = true;
option java_generic_services = true;
option optimize_for = SPEED;

message MultiRowMutationProcessorRequest{
}

message MultiRowMutationProcessorResponse{
}

message MutateRowsRequest {
  repeated MutationProto mutation_request = 1;
  optional uint64 nonce_group = 2;
  optional uint64 nonce = 3;
}

message MutateRowsResponse {
}

service MultiRowMutationService {
  rpc MutateRows(MutateRowsRequest)
      returns(MutateRowsResponse);
}